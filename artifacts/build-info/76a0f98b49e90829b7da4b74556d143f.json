{
	"id": "76a0f98b49e90829b7da4b74556d143f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Reward.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\n// import \"./Ownable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Reward is Ownable {\r\n    \r\n    struct RewardDetail{\r\n        uint256 rewardAmount;\r\n        uint256 lastClaim;\r\n    }\r\n    mapping (address => RewardDetail) private RewardDetails;\r\n    address private operator; \r\n\r\n    modifier onlyOperator{\r\n        require (msg.sender == operator, \"only operator\");\r\n        _;\r\n    }\r\n    constructor(address _operator){\r\n        operator = _operator;\r\n    }\r\n    function setOperator(address _operator) public onlyOwner{\r\n        operator = _operator;\r\n    }\r\n    function getOperator() public view returns(address){\r\n        return operator ;\r\n    }\r\n    function addReward(address _client) public payable onlyOperator{\r\n        RewardDetails[_client].rewardAmount += msg.value;\r\n    }\r\n    function claimReward(uint256 _amount) public payable {\r\n        require(RewardDetails[msg.sender].rewardAmount >= _amount, \"Not enough rewards\");\r\n        RewardDetails[msg.sender].rewardAmount -= _amount;\r\n        RewardDetails[msg.sender].lastClaim = block.timestamp;\r\n\r\n        payable(msg.sender).transfer(_amount);\r\n    }\r\n    function getBalance() public view returns(uint256 balance){\r\n        return RewardDetails[msg.sender].rewardAmount;\r\n    }\r\n    receive()external payable{}\r\n    fallback()external payable{}\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Reward.sol": {
				"Reward": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_client",
									"type": "address"
								}
							],
							"name": "addReward",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOperator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "setOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Reward.sol\":144:1407  contract Reward is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"Reward.sol\":479:548  constructor(address _operator){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"Reward.sol\":531:540  _operator */\n  dup1\n    /* \"Reward.sol\":520:528  operator */\n  0x02\n  0x00\n    /* \"Reward.sol\":520:540  operator = _operator */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Reward.sol\":479:548  constructor(address _operator){\r... */\n  pop\n    /* \"Reward.sol\":144:1407  contract Reward is Ownable {\r... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_16:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_18\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_21:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_22\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:542   */\ntag_23:\n    /* \"#utility.yul\":483:490   */\n  0x00\n    /* \"#utility.yul\":512:536   */\n  tag_25\n    /* \"#utility.yul\":530:535   */\n  dup3\n    /* \"#utility.yul\":512:536   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":501:536   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:542   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":548:674   */\ntag_26:\n    /* \"#utility.yul\":585:592   */\n  0x00\n    /* \"#utility.yul\":625:667   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":618:623   */\n  dup3\n    /* \"#utility.yul\":614:668   */\n  and\n    /* \"#utility.yul\":603:668   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:674   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":680:802   */\ntag_19:\n    /* \"#utility.yul\":753:777   */\n  tag_29\n    /* \"#utility.yul\":771:776   */\n  dup2\n    /* \"#utility.yul\":753:777   */\n  tag_23\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":746:751   */\n  dup2\n    /* \"#utility.yul\":743:778   */\n  eq\n    /* \"#utility.yul\":733:735   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":789:790   */\n  dup1\n    /* \"#utility.yul\":782:794   */\n  revert\n    /* \"#utility.yul\":733:735   */\ntag_30:\n    /* \"#utility.yul\":723:802   */\n  pop\n  jump\t// out\n    /* \"Reward.sol\":144:1407  contract Reward is Ownable {\r... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Reward.sol\":144:1407  contract Reward is Ownable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xae169a50\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xae169a50\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb3ab15fb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe7f43c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9c9b2e21\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"Reward.sol\":1215:1337  function getBalance() public view returns(uint256 balance){\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Reward.sol\":747:877  function addReward(address _client) public payable onlyOperator{\r... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Reward.sol\":883:1209  function claimReward(uint256 _amount) public payable {\r... */\n    tag_7:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"Reward.sol\":554:649  function setOperator(address _operator) public onlyOwner{\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"Reward.sol\":655:741  function getOperator() public view returns(address){\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"Reward.sol\":1215:1337  function getBalance() public view returns(uint256 balance){\r... */\n    tag_18:\n        /* \"Reward.sol\":1257:1272  uint256 balance */\n      0x00\n        /* \"Reward.sol\":1291:1304  RewardDetails */\n      0x01\n        /* \"Reward.sol\":1291:1316  RewardDetails[msg.sender] */\n      0x00\n        /* \"Reward.sol\":1305:1315  msg.sender */\n      caller\n        /* \"Reward.sol\":1291:1316  RewardDetails[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Reward.sol\":1291:1329  RewardDetails[msg.sender].rewardAmount */\n      0x00\n      add\n      sload\n        /* \"Reward.sol\":1284:1329  return RewardDetails[msg.sender].rewardAmount */\n      swap1\n      pop\n        /* \"Reward.sol\":1215:1337  function getBalance() public view returns(uint256 balance){\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Reward.sol\":747:877  function addReward(address _client) public payable onlyOperator{\r... */\n    tag_32:\n        /* \"Reward.sol\":427:435  operator */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Reward.sol\":413:435  msg.sender == operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Reward.sol\":413:423  msg.sender */\n      caller\n        /* \"Reward.sol\":413:435  msg.sender == operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Reward.sol\":404:453  require (msg.sender == operator, \"only operator\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"Reward.sol\":860:869  msg.value */\n      callvalue\n        /* \"Reward.sol\":821:834  RewardDetails */\n      0x01\n        /* \"Reward.sol\":821:843  RewardDetails[_client] */\n      0x00\n        /* \"Reward.sol\":835:842  _client */\n      dup4\n        /* \"Reward.sol\":821:843  RewardDetails[_client] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Reward.sol\":821:856  RewardDetails[_client].rewardAmount */\n      0x00\n      add\n      0x00\n        /* \"Reward.sol\":821:869  RewardDetails[_client].rewardAmount += msg.value */\n      dup3\n      dup3\n      sload\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Reward.sol\":747:877  function addReward(address _client) public payable onlyOperator{\r... */\n      pop\n      jump\t// out\n        /* \"Reward.sol\":883:1209  function claimReward(uint256 _amount) public payable {\r... */\n    tag_36:\n        /* \"Reward.sol\":997:1004  _amount */\n      dup1\n        /* \"Reward.sol\":955:968  RewardDetails */\n      0x01\n        /* \"Reward.sol\":955:980  RewardDetails[msg.sender] */\n      0x00\n        /* \"Reward.sol\":969:979  msg.sender */\n      caller\n        /* \"Reward.sol\":955:980  RewardDetails[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Reward.sol\":955:993  RewardDetails[msg.sender].rewardAmount */\n      0x00\n      add\n      sload\n        /* \"Reward.sol\":955:1004  RewardDetails[msg.sender].rewardAmount >= _amount */\n      lt\n      iszero\n        /* \"Reward.sol\":947:1027  require(RewardDetails[msg.sender].rewardAmount >= _amount, \"Not enough rewards\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"Reward.sol\":1080:1087  _amount */\n      dup1\n        /* \"Reward.sol\":1038:1051  RewardDetails */\n      0x01\n        /* \"Reward.sol\":1038:1063  RewardDetails[msg.sender] */\n      0x00\n        /* \"Reward.sol\":1052:1062  msg.sender */\n      caller\n        /* \"Reward.sol\":1038:1063  RewardDetails[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Reward.sol\":1038:1076  RewardDetails[msg.sender].rewardAmount */\n      0x00\n      add\n      0x00\n        /* \"Reward.sol\":1038:1087  RewardDetails[msg.sender].rewardAmount -= _amount */\n      dup3\n      dup3\n      sload\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Reward.sol\":1136:1151  block.timestamp */\n      timestamp\n        /* \"Reward.sol\":1098:1111  RewardDetails */\n      0x01\n        /* \"Reward.sol\":1098:1123  RewardDetails[msg.sender] */\n      0x00\n        /* \"Reward.sol\":1112:1122  msg.sender */\n      caller\n        /* \"Reward.sol\":1098:1123  RewardDetails[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Reward.sol\":1098:1133  RewardDetails[msg.sender].lastClaim */\n      0x01\n      add\n        /* \"Reward.sol\":1098:1151  RewardDetails[msg.sender].lastClaim = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Reward.sol\":1172:1182  msg.sender */\n      caller\n        /* \"Reward.sol\":1164:1192  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Reward.sol\":1164:1201  payable(msg.sender).transfer(_amount) */\n      0x08fc\n        /* \"Reward.sol\":1193:1200  _amount */\n      dup3\n        /* \"Reward.sol\":1164:1201  payable(msg.sender).transfer(_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n        /* \"Reward.sol\":883:1209  function claimReward(uint256 _amount) public payable {\r... */\n      pop\n      jump\t// out\n        /* \"Reward.sol\":554:649  function setOperator(address _operator) public onlyOwner{\r... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_73:\n        /* \"Reward.sol\":632:641  _operator */\n      dup1\n        /* \"Reward.sol\":621:629  operator */\n      0x02\n      0x00\n        /* \"Reward.sol\":621:641  operator = _operator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Reward.sol\":554:649  function setOperator(address _operator) public onlyOwner{\r... */\n      pop\n      jump\t// out\n        /* \"Reward.sol\":655:741  function getOperator() public view returns(address){\r... */\n    tag_43:\n        /* \"Reward.sol\":698:705  address */\n      0x00\n        /* \"Reward.sol\":724:732  operator */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Reward.sol\":717:732  return operator */\n      swap1\n      pop\n        /* \"Reward.sol\":655:741  function getOperator() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_26\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_93:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_95\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_97:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_99\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:559   */\n    tag_31:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:375   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":421:422   */\n      0x00\n        /* \"#utility.yul\":418:419   */\n      dup1\n        /* \"#utility.yul\":411:423   */\n      revert\n        /* \"#utility.yul\":373:375   */\n    tag_102:\n        /* \"#utility.yul\":464:465   */\n      0x00\n        /* \"#utility.yul\":489:542   */\n      tag_103\n        /* \"#utility.yul\":534:541   */\n      dup5\n        /* \"#utility.yul\":525:531   */\n      dup3\n        /* \"#utility.yul\":514:523   */\n      dup6\n        /* \"#utility.yul\":510:532   */\n      add\n        /* \"#utility.yul\":489:542   */\n      tag_93\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":479:542   */\n      swap2\n      pop\n        /* \"#utility.yul\":435:552   */\n      pop\n        /* \"#utility.yul\":363:559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:827   */\n    tag_35:\n        /* \"#utility.yul\":624:630   */\n      0x00\n        /* \"#utility.yul\":673:675   */\n      0x20\n        /* \"#utility.yul\":661:670   */\n      dup3\n        /* \"#utility.yul\":652:659   */\n      dup5\n        /* \"#utility.yul\":648:671   */\n      sub\n        /* \"#utility.yul\":644:676   */\n      slt\n        /* \"#utility.yul\":641:643   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":689:690   */\n      0x00\n        /* \"#utility.yul\":686:687   */\n      dup1\n        /* \"#utility.yul\":679:691   */\n      revert\n        /* \"#utility.yul\":641:643   */\n    tag_105:\n        /* \"#utility.yul\":732:733   */\n      0x00\n        /* \"#utility.yul\":757:810   */\n      tag_106\n        /* \"#utility.yul\":802:809   */\n      dup5\n        /* \"#utility.yul\":793:799   */\n      dup3\n        /* \"#utility.yul\":782:791   */\n      dup6\n        /* \"#utility.yul\":778:800   */\n      add\n        /* \"#utility.yul\":757:810   */\n      tag_97\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":747:810   */\n      swap2\n      pop\n        /* \"#utility.yul\":703:820   */\n      pop\n        /* \"#utility.yul\":631:827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":833:951   */\n    tag_107:\n        /* \"#utility.yul\":920:944   */\n      tag_109\n        /* \"#utility.yul\":938:943   */\n      dup2\n        /* \"#utility.yul\":920:944   */\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":915:918   */\n      dup3\n        /* \"#utility.yul\":908:945   */\n      mstore\n        /* \"#utility.yul\":898:951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":957:1323   */\n    tag_111:\n        /* \"#utility.yul\":1099:1102   */\n      0x00\n        /* \"#utility.yul\":1120:1187   */\n      tag_113\n        /* \"#utility.yul\":1184:1186   */\n      0x12\n        /* \"#utility.yul\":1179:1182   */\n      dup4\n        /* \"#utility.yul\":1120:1187   */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1113:1187   */\n      swap2\n      pop\n        /* \"#utility.yul\":1196:1289   */\n      tag_115\n        /* \"#utility.yul\":1285:1288   */\n      dup3\n        /* \"#utility.yul\":1196:1289   */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1314:1316   */\n      0x20\n        /* \"#utility.yul\":1309:1312   */\n      dup3\n        /* \"#utility.yul\":1305:1317   */\n      add\n        /* \"#utility.yul\":1298:1317   */\n      swap1\n      pop\n        /* \"#utility.yul\":1103:1323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1329:1695   */\n    tag_117:\n        /* \"#utility.yul\":1471:1474   */\n      0x00\n        /* \"#utility.yul\":1492:1559   */\n      tag_119\n        /* \"#utility.yul\":1556:1558   */\n      0x26\n        /* \"#utility.yul\":1551:1554   */\n      dup4\n        /* \"#utility.yul\":1492:1559   */\n      tag_114\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1485:1559   */\n      swap2\n      pop\n        /* \"#utility.yul\":1568:1661   */\n      tag_120\n        /* \"#utility.yul\":1657:1660   */\n      dup3\n        /* \"#utility.yul\":1568:1661   */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1686:1688   */\n      0x40\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1677:1689   */\n      add\n        /* \"#utility.yul\":1670:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1475:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:2067   */\n    tag_122:\n        /* \"#utility.yul\":1843:1846   */\n      0x00\n        /* \"#utility.yul\":1864:1931   */\n      tag_124\n        /* \"#utility.yul\":1928:1930   */\n      0x20\n        /* \"#utility.yul\":1923:1926   */\n      dup4\n        /* \"#utility.yul\":1864:1931   */\n      tag_114\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1857:1931   */\n      swap2\n      pop\n        /* \"#utility.yul\":1940:2033   */\n      tag_125\n        /* \"#utility.yul\":2029:2032   */\n      dup3\n        /* \"#utility.yul\":1940:2033   */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2058:2060   */\n      0x20\n        /* \"#utility.yul\":2053:2056   */\n      dup3\n        /* \"#utility.yul\":2049:2061   */\n      add\n        /* \"#utility.yul\":2042:2061   */\n      swap1\n      pop\n        /* \"#utility.yul\":1847:2067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2073:2439   */\n    tag_127:\n        /* \"#utility.yul\":2215:2218   */\n      0x00\n        /* \"#utility.yul\":2236:2303   */\n      tag_129\n        /* \"#utility.yul\":2300:2302   */\n      0x0d\n        /* \"#utility.yul\":2295:2298   */\n      dup4\n        /* \"#utility.yul\":2236:2303   */\n      tag_114\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2229:2303   */\n      swap2\n      pop\n        /* \"#utility.yul\":2312:2405   */\n      tag_130\n        /* \"#utility.yul\":2401:2404   */\n      dup3\n        /* \"#utility.yul\":2312:2405   */\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2430:2432   */\n      0x20\n        /* \"#utility.yul\":2425:2428   */\n      dup3\n        /* \"#utility.yul\":2421:2433   */\n      add\n        /* \"#utility.yul\":2414:2433   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2445:2563   */\n    tag_132:\n        /* \"#utility.yul\":2532:2556   */\n      tag_134\n        /* \"#utility.yul\":2550:2555   */\n      dup2\n        /* \"#utility.yul\":2532:2556   */\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2527:2530   */\n      dup3\n        /* \"#utility.yul\":2520:2557   */\n      mstore\n        /* \"#utility.yul\":2510:2563   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2569:2791   */\n    tag_28:\n        /* \"#utility.yul\":2662:2666   */\n      0x00\n        /* \"#utility.yul\":2700:2702   */\n      0x20\n        /* \"#utility.yul\":2689:2698   */\n      dup3\n        /* \"#utility.yul\":2685:2703   */\n      add\n        /* \"#utility.yul\":2677:2703   */\n      swap1\n      pop\n        /* \"#utility.yul\":2713:2784   */\n      tag_137\n        /* \"#utility.yul\":2781:2782   */\n      0x00\n        /* \"#utility.yul\":2770:2779   */\n      dup4\n        /* \"#utility.yul\":2766:2783   */\n      add\n        /* \"#utility.yul\":2757:2763   */\n      dup5\n        /* \"#utility.yul\":2713:2784   */\n      tag_107\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2667:2791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2797:3216   */\n    tag_67:\n        /* \"#utility.yul\":2963:2967   */\n      0x00\n        /* \"#utility.yul\":3001:3003   */\n      0x20\n        /* \"#utility.yul\":2990:2999   */\n      dup3\n        /* \"#utility.yul\":2986:3004   */\n      add\n        /* \"#utility.yul\":2978:3004   */\n      swap1\n      pop\n        /* \"#utility.yul\":3050:3059   */\n      dup2\n        /* \"#utility.yul\":3044:3048   */\n      dup2\n        /* \"#utility.yul\":3040:3060   */\n      sub\n        /* \"#utility.yul\":3036:3037   */\n      0x00\n        /* \"#utility.yul\":3025:3034   */\n      dup4\n        /* \"#utility.yul\":3021:3038   */\n      add\n        /* \"#utility.yul\":3014:3061   */\n      mstore\n        /* \"#utility.yul\":3078:3209   */\n      tag_139\n        /* \"#utility.yul\":3204:3208   */\n      dup2\n        /* \"#utility.yul\":3078:3209   */\n      tag_111\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3070:3209   */\n      swap1\n      pop\n        /* \"#utility.yul\":2968:3216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3641   */\n    tag_81:\n        /* \"#utility.yul\":3388:3392   */\n      0x00\n        /* \"#utility.yul\":3426:3428   */\n      0x20\n        /* \"#utility.yul\":3415:3424   */\n      dup3\n        /* \"#utility.yul\":3411:3429   */\n      add\n        /* \"#utility.yul\":3403:3429   */\n      swap1\n      pop\n        /* \"#utility.yul\":3475:3484   */\n      dup2\n        /* \"#utility.yul\":3469:3473   */\n      dup2\n        /* \"#utility.yul\":3465:3485   */\n      sub\n        /* \"#utility.yul\":3461:3462   */\n      0x00\n        /* \"#utility.yul\":3450:3459   */\n      dup4\n        /* \"#utility.yul\":3446:3463   */\n      add\n        /* \"#utility.yul\":3439:3486   */\n      mstore\n        /* \"#utility.yul\":3503:3634   */\n      tag_141\n        /* \"#utility.yul\":3629:3633   */\n      dup2\n        /* \"#utility.yul\":3503:3634   */\n      tag_117\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3495:3634   */\n      swap1\n      pop\n        /* \"#utility.yul\":3393:3641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3647:4066   */\n    tag_89:\n        /* \"#utility.yul\":3813:3817   */\n      0x00\n        /* \"#utility.yul\":3851:3853   */\n      0x20\n        /* \"#utility.yul\":3840:3849   */\n      dup3\n        /* \"#utility.yul\":3836:3854   */\n      add\n        /* \"#utility.yul\":3828:3854   */\n      swap1\n      pop\n        /* \"#utility.yul\":3900:3909   */\n      dup2\n        /* \"#utility.yul\":3894:3898   */\n      dup2\n        /* \"#utility.yul\":3890:3910   */\n      sub\n        /* \"#utility.yul\":3886:3887   */\n      0x00\n        /* \"#utility.yul\":3875:3884   */\n      dup4\n        /* \"#utility.yul\":3871:3888   */\n      add\n        /* \"#utility.yul\":3864:3911   */\n      mstore\n        /* \"#utility.yul\":3928:4059   */\n      tag_143\n        /* \"#utility.yul\":4054:4058   */\n      dup2\n        /* \"#utility.yul\":3928:4059   */\n      tag_122\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3920:4059   */\n      swap1\n      pop\n        /* \"#utility.yul\":3818:4066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4072:4491   */\n    tag_60:\n        /* \"#utility.yul\":4238:4242   */\n      0x00\n        /* \"#utility.yul\":4276:4278   */\n      0x20\n        /* \"#utility.yul\":4265:4274   */\n      dup3\n        /* \"#utility.yul\":4261:4279   */\n      add\n        /* \"#utility.yul\":4253:4279   */\n      swap1\n      pop\n        /* \"#utility.yul\":4325:4334   */\n      dup2\n        /* \"#utility.yul\":4319:4323   */\n      dup2\n        /* \"#utility.yul\":4315:4335   */\n      sub\n        /* \"#utility.yul\":4311:4312   */\n      0x00\n        /* \"#utility.yul\":4300:4309   */\n      dup4\n        /* \"#utility.yul\":4296:4313   */\n      add\n        /* \"#utility.yul\":4289:4336   */\n      mstore\n        /* \"#utility.yul\":4353:4484   */\n      tag_145\n        /* \"#utility.yul\":4479:4483   */\n      dup2\n        /* \"#utility.yul\":4353:4484   */\n      tag_127\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4345:4484   */\n      swap1\n      pop\n        /* \"#utility.yul\":4243:4491   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4497:4719   */\n    tag_20:\n        /* \"#utility.yul\":4590:4594   */\n      0x00\n        /* \"#utility.yul\":4628:4630   */\n      0x20\n        /* \"#utility.yul\":4617:4626   */\n      dup3\n        /* \"#utility.yul\":4613:4631   */\n      add\n        /* \"#utility.yul\":4605:4631   */\n      swap1\n      pop\n        /* \"#utility.yul\":4641:4712   */\n      tag_147\n        /* \"#utility.yul\":4709:4710   */\n      0x00\n        /* \"#utility.yul\":4698:4707   */\n      dup4\n        /* \"#utility.yul\":4694:4711   */\n      add\n        /* \"#utility.yul\":4685:4691   */\n      dup5\n        /* \"#utility.yul\":4641:4712   */\n      tag_132\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4595:4719   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4725:4894   */\n    tag_114:\n        /* \"#utility.yul\":4809:4820   */\n      0x00\n        /* \"#utility.yul\":4843:4849   */\n      dup3\n        /* \"#utility.yul\":4838:4841   */\n      dup3\n        /* \"#utility.yul\":4831:4850   */\n      mstore\n        /* \"#utility.yul\":4883:4887   */\n      0x20\n        /* \"#utility.yul\":4878:4881   */\n      dup3\n        /* \"#utility.yul\":4874:4888   */\n      add\n        /* \"#utility.yul\":4859:4888   */\n      swap1\n      pop\n        /* \"#utility.yul\":4821:4894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4900:5205   */\n    tag_63:\n        /* \"#utility.yul\":4940:4943   */\n      0x00\n        /* \"#utility.yul\":4959:4979   */\n      tag_150\n        /* \"#utility.yul\":4977:4978   */\n      dup3\n        /* \"#utility.yul\":4959:4979   */\n      tag_135\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4954:4979   */\n      swap2\n      pop\n        /* \"#utility.yul\":4993:5013   */\n      tag_151\n        /* \"#utility.yul\":5011:5012   */\n      dup4\n        /* \"#utility.yul\":4993:5013   */\n      tag_135\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4988:5013   */\n      swap3\n      pop\n        /* \"#utility.yul\":5147:5148   */\n      dup3\n        /* \"#utility.yul\":5079:5145   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5075:5149   */\n      sub\n        /* \"#utility.yul\":5072:5073   */\n      dup3\n        /* \"#utility.yul\":5069:5150   */\n      gt\n        /* \"#utility.yul\":5066:5068   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":5153:5171   */\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5066:5068   */\n    tag_152:\n        /* \"#utility.yul\":5197:5198   */\n      dup3\n        /* \"#utility.yul\":5194:5195   */\n      dup3\n        /* \"#utility.yul\":5190:5199   */\n      add\n        /* \"#utility.yul\":5183:5199   */\n      swap1\n      pop\n        /* \"#utility.yul\":4944:5205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5211:5402   */\n    tag_69:\n        /* \"#utility.yul\":5251:5255   */\n      0x00\n        /* \"#utility.yul\":5271:5291   */\n      tag_156\n        /* \"#utility.yul\":5289:5290   */\n      dup3\n        /* \"#utility.yul\":5271:5291   */\n      tag_135\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5266:5291   */\n      swap2\n      pop\n        /* \"#utility.yul\":5305:5325   */\n      tag_157\n        /* \"#utility.yul\":5323:5324   */\n      dup4\n        /* \"#utility.yul\":5305:5325   */\n      tag_135\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5300:5325   */\n      swap3\n      pop\n        /* \"#utility.yul\":5344:5345   */\n      dup3\n        /* \"#utility.yul\":5341:5342   */\n      dup3\n        /* \"#utility.yul\":5338:5346   */\n      lt\n        /* \"#utility.yul\":5335:5337   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":5349:5367   */\n      tag_159\n      tag_154\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5335:5337   */\n    tag_158:\n        /* \"#utility.yul\":5394:5395   */\n      dup3\n        /* \"#utility.yul\":5391:5392   */\n      dup3\n        /* \"#utility.yul\":5387:5396   */\n      sub\n        /* \"#utility.yul\":5379:5396   */\n      swap1\n      pop\n        /* \"#utility.yul\":5256:5402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5408:5504   */\n    tag_110:\n        /* \"#utility.yul\":5445:5452   */\n      0x00\n        /* \"#utility.yul\":5474:5498   */\n      tag_161\n        /* \"#utility.yul\":5492:5497   */\n      dup3\n        /* \"#utility.yul\":5474:5498   */\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5463:5498   */\n      swap1\n      pop\n        /* \"#utility.yul\":5453:5504   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5510:5636   */\n    tag_162:\n        /* \"#utility.yul\":5547:5554   */\n      0x00\n        /* \"#utility.yul\":5587:5629   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5580:5585   */\n      dup3\n        /* \"#utility.yul\":5576:5630   */\n      and\n        /* \"#utility.yul\":5565:5630   */\n      swap1\n      pop\n        /* \"#utility.yul\":5555:5636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5642:5719   */\n    tag_135:\n        /* \"#utility.yul\":5679:5686   */\n      0x00\n        /* \"#utility.yul\":5708:5713   */\n      dup2\n        /* \"#utility.yul\":5697:5713   */\n      swap1\n      pop\n        /* \"#utility.yul\":5687:5719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5725:5905   */\n    tag_154:\n        /* \"#utility.yul\":5773:5850   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5770:5771   */\n      0x00\n        /* \"#utility.yul\":5763:5851   */\n      mstore\n        /* \"#utility.yul\":5870:5874   */\n      0x11\n        /* \"#utility.yul\":5867:5868   */\n      0x04\n        /* \"#utility.yul\":5860:5875   */\n      mstore\n        /* \"#utility.yul\":5894:5898   */\n      0x24\n        /* \"#utility.yul\":5891:5892   */\n      0x00\n        /* \"#utility.yul\":5884:5899   */\n      revert\n        /* \"#utility.yul\":5911:6079   */\n    tag_116:\n        /* \"#utility.yul\":6051:6071   */\n      0x4e6f7420656e6f75676820726577617264730000000000000000000000000000\n        /* \"#utility.yul\":6047:6048   */\n      0x00\n        /* \"#utility.yul\":6039:6045   */\n      dup3\n        /* \"#utility.yul\":6035:6049   */\n      add\n        /* \"#utility.yul\":6028:6072   */\n      mstore\n        /* \"#utility.yul\":6017:6079   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6085:6310   */\n    tag_121:\n        /* \"#utility.yul\":6225:6259   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6221:6222   */\n      0x00\n        /* \"#utility.yul\":6213:6219   */\n      dup3\n        /* \"#utility.yul\":6209:6223   */\n      add\n        /* \"#utility.yul\":6202:6260   */\n      mstore\n        /* \"#utility.yul\":6294:6302   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6289:6291   */\n      0x20\n        /* \"#utility.yul\":6281:6287   */\n      dup3\n        /* \"#utility.yul\":6277:6292   */\n      add\n        /* \"#utility.yul\":6270:6303   */\n      mstore\n        /* \"#utility.yul\":6191:6310   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6316:6498   */\n    tag_126:\n        /* \"#utility.yul\":6456:6490   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6452:6453   */\n      0x00\n        /* \"#utility.yul\":6444:6450   */\n      dup3\n        /* \"#utility.yul\":6440:6454   */\n      add\n        /* \"#utility.yul\":6433:6491   */\n      mstore\n        /* \"#utility.yul\":6422:6498   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6504:6667   */\n    tag_131:\n        /* \"#utility.yul\":6644:6659   */\n      0x6f6e6c79206f70657261746f7200000000000000000000000000000000000000\n        /* \"#utility.yul\":6640:6641   */\n      0x00\n        /* \"#utility.yul\":6632:6638   */\n      dup3\n        /* \"#utility.yul\":6628:6642   */\n      add\n        /* \"#utility.yul\":6621:6660   */\n      mstore\n        /* \"#utility.yul\":6610:6667   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6673:6795   */\n    tag_96:\n        /* \"#utility.yul\":6746:6770   */\n      tag_171\n        /* \"#utility.yul\":6764:6769   */\n      dup2\n        /* \"#utility.yul\":6746:6770   */\n      tag_110\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6739:6744   */\n      dup2\n        /* \"#utility.yul\":6736:6771   */\n      eq\n        /* \"#utility.yul\":6726:6728   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":6785:6786   */\n      0x00\n        /* \"#utility.yul\":6782:6783   */\n      dup1\n        /* \"#utility.yul\":6775:6787   */\n      revert\n        /* \"#utility.yul\":6726:6728   */\n    tag_172:\n        /* \"#utility.yul\":6716:6795   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6801:6923   */\n    tag_100:\n        /* \"#utility.yul\":6874:6898   */\n      tag_174\n        /* \"#utility.yul\":6892:6897   */\n      dup2\n        /* \"#utility.yul\":6874:6898   */\n      tag_135\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6867:6872   */\n      dup2\n        /* \"#utility.yul\":6864:6899   */\n      eq\n        /* \"#utility.yul\":6854:6856   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":6913:6914   */\n      0x00\n        /* \"#utility.yul\":6910:6911   */\n      dup1\n        /* \"#utility.yul\":6903:6915   */\n      revert\n        /* \"#utility.yul\":6854:6856   */\n    tag_175:\n        /* \"#utility.yul\":6844:6923   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209b24b070a50300e68b962abacb4664eeae5deb1a89387c9b163dfd5e56ce29a664736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:805:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:3",
														"type": ""
													}
												],
												"src": "7:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:3"
															},
															"nodeType": "YulIf",
															"src": "243:2:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:3",
														"type": ""
													}
												],
												"src": "156:284:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "530:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "512:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:3",
														"type": ""
													}
												],
												"src": "446:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "603:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "618:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "614:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "603:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "575:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "585:7:3",
														"type": ""
													}
												],
												"src": "548:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "723:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "780:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "789:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "782:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "782:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "782:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "746:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "753:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "753:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "743:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "743:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:43:3"
															},
															"nodeType": "YulIf",
															"src": "733:2:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "716:5:3",
														"type": ""
													}
												],
												"src": "680:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610cd7380380610cd783398181016040528101906100329190610176565b61004e61004361009560201b60201c565b61009d60201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101e8565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050610170816101d1565b92915050565b60006020828403121561018857600080fd5b600061019684828501610161565b91505092915050565b60006101aa826101b1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101da8161019f565b81146101e557600080fd5b50565b610ae0806101f76000396000f3fe60806040526004361061007f5760003560e01c8063ae169a501161004e578063ae169a5014610111578063b3ab15fb1461012d578063e7f43c6814610156578063f2fde38b1461018157610086565b806312065fe014610088578063715018a6146100b35780638da5cb5b146100ca5780639c9b2e21146100f557610086565b3661008657005b005b34801561009457600080fd5b5061009d6101aa565b6040516100aa9190610891565b60405180910390f35b3480156100bf57600080fd5b506100c86101f4565b005b3480156100d657600080fd5b506100df610208565b6040516100ec91906107f6565b60405180910390f35b61010f600480360381019061010a91906106fa565b610231565b005b61012b60048036038101906101269190610723565b61031d565b005b34801561013957600080fd5b50610154600480360381019061014f91906106fa565b61048c565b005b34801561016257600080fd5b5061016b6104d8565b60405161017891906107f6565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a391906106fa565b610502565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6101fc610586565b6102066000610604565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b890610871565b60405180910390fd5b34600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461031391906108bd565b9250508190555050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410156103a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039990610811565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546103f49190610913565b9250508190555042600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610488573d6000803e3d6000fd5b5050565b610494610586565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61050a610586565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561057a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057190610831565b60405180910390fd5b61058381610604565b50565b61058e6106c8565b73ffffffffffffffffffffffffffffffffffffffff166105ac610208565b73ffffffffffffffffffffffffffffffffffffffff1614610602576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f990610851565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000813590506106df81610a7c565b92915050565b6000813590506106f481610a93565b92915050565b60006020828403121561070c57600080fd5b600061071a848285016106d0565b91505092915050565b60006020828403121561073557600080fd5b6000610743848285016106e5565b91505092915050565b61075581610947565b82525050565b60006107686012836108ac565b9150610773826109b2565b602082019050919050565b600061078b6026836108ac565b9150610796826109db565b604082019050919050565b60006107ae6020836108ac565b91506107b982610a2a565b602082019050919050565b60006107d1600d836108ac565b91506107dc82610a53565b602082019050919050565b6107f081610979565b82525050565b600060208201905061080b600083018461074c565b92915050565b6000602082019050818103600083015261082a8161075b565b9050919050565b6000602082019050818103600083015261084a8161077e565b9050919050565b6000602082019050818103600083015261086a816107a1565b9050919050565b6000602082019050818103600083015261088a816107c4565b9050919050565b60006020820190506108a660008301846107e7565b92915050565b600082825260208201905092915050565b60006108c882610979565b91506108d383610979565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561090857610907610983565b5b828201905092915050565b600061091e82610979565b915061092983610979565b92508282101561093c5761093b610983565b5b828203905092915050565b600061095282610959565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e6f7420656e6f75676820726577617264730000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6f6e6c79206f70657261746f7200000000000000000000000000000000000000600082015250565b610a8581610947565b8114610a9057600080fd5b50565b610a9c81610979565b8114610aa757600080fd5b5056fea26469706673582212209b24b070a50300e68b962abacb4664eeae5deb1a89387c9b163dfd5e56ce29a664736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xCD7 CODESIZE SUB DUP1 PUSH2 0xCD7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x176 JUMP JUMPDEST PUSH2 0x4E PUSH2 0x43 PUSH2 0x95 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x9D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x170 DUP2 PUSH2 0x1D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x196 DUP5 DUP3 DUP6 ADD PUSH2 0x161 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA DUP3 PUSH2 0x1B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA DUP2 PUSH2 0x19F JUMP JUMPDEST DUP2 EQ PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xAE0 DUP1 PUSH2 0x1F7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAE169A50 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xE7F43C68 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x181 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x9C9B2E21 EQ PUSH2 0xF5 JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x891 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x1F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF PUSH2 0x208 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x231 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x723 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1FC PUSH2 0x586 JUMP JUMPDEST PUSH2 0x206 PUSH1 0x0 PUSH2 0x604 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x8BD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x913 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x488 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x494 PUSH2 0x586 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x50A PUSH2 0x586 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x57A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x571 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x583 DUP2 PUSH2 0x604 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x58E PUSH2 0x6C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5AC PUSH2 0x208 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x602 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F9 SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6DF DUP2 PUSH2 0xA7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6F4 DUP2 PUSH2 0xA93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x70C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x71A DUP5 DUP3 DUP6 ADD PUSH2 0x6D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x743 DUP5 DUP3 DUP6 ADD PUSH2 0x6E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x755 DUP2 PUSH2 0x947 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x768 PUSH1 0x12 DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0x773 DUP3 PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78B PUSH1 0x26 DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0x796 DUP3 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AE PUSH1 0x20 DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0x7B9 DUP3 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 PUSH1 0xD DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0x7DC DUP3 PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F0 DUP2 PUSH2 0x979 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x80B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x74C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x82A DUP2 PUSH2 0x75B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x84A DUP2 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x86A DUP2 PUSH2 0x7A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x88A DUP2 PUSH2 0x7C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C8 DUP3 PUSH2 0x979 JUMP JUMPDEST SWAP2 POP PUSH2 0x8D3 DUP4 PUSH2 0x979 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x908 JUMPI PUSH2 0x907 PUSH2 0x983 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91E DUP3 PUSH2 0x979 JUMP JUMPDEST SWAP2 POP PUSH2 0x929 DUP4 PUSH2 0x979 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x93C JUMPI PUSH2 0x93B PUSH2 0x983 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x952 DUP3 PUSH2 0x959 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E6F7420656E6F75676820726577617264730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6F6E6C79206F70657261746F7200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xA85 DUP2 PUSH2 0x947 JUMP JUMPDEST DUP2 EQ PUSH2 0xA90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA9C DUP2 PUSH2 0x979 JUMP JUMPDEST DUP2 EQ PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0x24 0xB0 PUSH17 0xA50300E68B962ABACB4664EEAE5DEB1A89 CODESIZE PUSH29 0x9B163DFD5E56CE29A664736F6C63430008040033000000000000000000 ",
							"sourceMap": "144:1263:2:-:0;;;479:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;531:9:2;520:8;;:20;;;;;;;;;;;;;;;;;;479:69;144:1263;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;7:143:3:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;483:7;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;585:7;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;144:1263:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6926:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:3",
														"type": ""
													}
												],
												"src": "152:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:196:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "418:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "421:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:3"
															},
															"nodeType": "YulIf",
															"src": "373:2:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "435:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "450:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "454:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "479:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "514:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "525:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "510:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "510:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "534:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "489:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "479:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:3",
														"type": ""
													}
												],
												"src": "297:262:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "631:196:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "677:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "686:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "679:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "679:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "679:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "652:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "661:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "648:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "648:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "673:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "644:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "644:32:3"
															},
															"nodeType": "YulIf",
															"src": "641:2:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "703:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "718:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "732:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "722:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "747:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "782:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "793:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "778:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "778:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "802:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "757:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "757:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "747:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "601:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "612:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "624:6:3",
														"type": ""
													}
												],
												"src": "565:262:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "915:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "938:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "920:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "920:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "908:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "908:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "886:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "893:3:3",
														"type": ""
													}
												],
												"src": "833:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1103:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1113:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1179:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1184:2:3",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1120:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1120:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1113:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1285:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0a5c22dd55998d2774852d6ff15769c4a0c35cf30739339d4119e36bab85463f",
																	"nodeType": "YulIdentifier",
																	"src": "1196:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1196:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1196:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1298:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1309:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1314:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1305:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1305:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1298:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0a5c22dd55998d2774852d6ff15769c4a0c35cf30739339d4119e36bab85463f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1091:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1099:3:3",
														"type": ""
													}
												],
												"src": "957:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1475:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1485:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1551:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1556:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1492:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1492:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1485:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1657:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "1568:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1568:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1568:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1670:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1670:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1463:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1471:3:3",
														"type": ""
													}
												],
												"src": "1329:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1857:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1923:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1928:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1864:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1857:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2029:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1940:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1940:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2042:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2053:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2058:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2049:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2049:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2042:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1835:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1843:3:3",
														"type": ""
													}
												],
												"src": "1701:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2219:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2229:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2295:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2300:2:3",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2236:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2229:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2401:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
																	"nodeType": "YulIdentifier",
																	"src": "2312:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2312:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2312:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2414:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2425:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2430:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2421:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2421:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2414:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2207:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2215:3:3",
														"type": ""
													}
												],
												"src": "2073:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2510:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2527:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2550:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2532:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2532:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2520:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2520:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2520:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2498:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2505:3:3",
														"type": ""
													}
												],
												"src": "2445:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2667:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2677:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2689:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2700:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2685:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2685:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2677:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2757:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2770:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2781:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2766:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2766:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2713:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2713:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2713:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2639:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2651:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2662:4:3",
														"type": ""
													}
												],
												"src": "2569:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2968:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2978:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2990:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3001:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2986:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2986:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2978:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3025:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3036:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3021:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3021:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3044:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3050:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3040:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3040:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3014:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3014:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3070:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3204:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0a5c22dd55998d2774852d6ff15769c4a0c35cf30739339d4119e36bab85463f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3078:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3070:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a5c22dd55998d2774852d6ff15769c4a0c35cf30739339d4119e36bab85463f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2948:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2963:4:3",
														"type": ""
													}
												],
												"src": "2797:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3393:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3403:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3415:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3426:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3411:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3411:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3403:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3450:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3461:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3446:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3446:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3469:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3475:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3465:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3465:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3439:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3495:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3629:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3503:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3495:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3373:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3388:4:3",
														"type": ""
													}
												],
												"src": "3222:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3818:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3828:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3840:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3836:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3828:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3875:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3886:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3871:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3871:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3894:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3900:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3890:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3890:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3864:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3864:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3864:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3920:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4054:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3928:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3928:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3920:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3798:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3813:4:3",
														"type": ""
													}
												],
												"src": "3647:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4243:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4253:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4265:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4276:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4261:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4261:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4253:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4300:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4311:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4296:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4296:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4319:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4325:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4315:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4315:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4289:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4289:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4289:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4345:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4479:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4353:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4345:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4223:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4238:4:3",
														"type": ""
													}
												],
												"src": "4072:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4595:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4605:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4617:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4628:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4613:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4605:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4685:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4698:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4709:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4694:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4694:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4641:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4641:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4641:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4567:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4579:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4590:4:3",
														"type": ""
													}
												],
												"src": "4497:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4821:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4838:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4843:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4831:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4831:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4831:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4878:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4883:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4874:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4874:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4859:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4793:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4798:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4809:11:3",
														"type": ""
													}
												],
												"src": "4725:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4944:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4954:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4977:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4959:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4959:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4954:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4988:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5011:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4993:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4988:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5151:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5153:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5153:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5153:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5072:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5079:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5147:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5075:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5075:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5069:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5069:81:3"
															},
															"nodeType": "YulIf",
															"src": "5066:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5183:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5194:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5197:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5190:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5190:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5183:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4931:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4934:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4940:3:3",
														"type": ""
													}
												],
												"src": "4900:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5256:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5266:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5289:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5271:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5271:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5266:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5300:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5323:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5305:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5305:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5300:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5347:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5349:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5349:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5349:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5341:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5344:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5338:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5338:8:3"
															},
															"nodeType": "YulIf",
															"src": "5335:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5379:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5391:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5394:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5387:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5387:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5379:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5242:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5245:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5251:4:3",
														"type": ""
													}
												],
												"src": "5211:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5453:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5463:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5492:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5474:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5474:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5463:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5435:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5445:7:3",
														"type": ""
													}
												],
												"src": "5408:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5555:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5565:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5580:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5587:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5576:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5565:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5537:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5547:7:3",
														"type": ""
													}
												],
												"src": "5510:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5687:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5697:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5708:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5697:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5669:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5679:7:3",
														"type": ""
													}
												],
												"src": "5642:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5753:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5770:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5773:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5763:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5763:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5763:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5867:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5870:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5860:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5860:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5860:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5891:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5894:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5884:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5884:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5884:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5725:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6017:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6039:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6047:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6035:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6035:14:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6051:20:3",
																		"type": "",
																		"value": "Not enough rewards"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6028:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6028:44:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6028:44:3"
														}
													]
												},
												"name": "store_literal_in_memory_0a5c22dd55998d2774852d6ff15769c4a0c35cf30739339d4119e36bab85463f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6009:6:3",
														"type": ""
													}
												],
												"src": "5911:168:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6191:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6213:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6221:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6209:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6209:14:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6225:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6202:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6202:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6202:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6281:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6289:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6277:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6277:15:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6294:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6270:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6270:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6270:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6183:6:3",
														"type": ""
													}
												],
												"src": "6085:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6422:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6444:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6452:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6440:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6440:14:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6456:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6433:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6433:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6433:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6414:6:3",
														"type": ""
													}
												],
												"src": "6316:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6610:57:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6632:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6640:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6628:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6628:14:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6644:15:3",
																		"type": "",
																		"value": "only operator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6621:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6621:39:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6621:39:3"
														}
													]
												},
												"name": "store_literal_in_memory_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6602:6:3",
														"type": ""
													}
												],
												"src": "6504:163:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6716:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6773:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6782:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6785:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6775:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6775:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6775:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6739:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6764:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6746:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6746:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6736:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6729:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6729:43:3"
															},
															"nodeType": "YulIf",
															"src": "6726:2:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6709:5:3",
														"type": ""
													}
												],
												"src": "6673:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6844:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6901:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6910:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6913:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6903:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6903:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6903:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6867:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6892:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6874:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6874:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6864:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6857:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6857:43:3"
															},
															"nodeType": "YulIf",
															"src": "6854:2:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6837:5:3",
														"type": ""
													}
												],
												"src": "6801:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_0a5c22dd55998d2774852d6ff15769c4a0c35cf30739339d4119e36bab85463f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_0a5c22dd55998d2774852d6ff15769c4a0c35cf30739339d4119e36bab85463f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a5c22dd55998d2774852d6ff15769c4a0c35cf30739339d4119e36bab85463f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a5c22dd55998d2774852d6ff15769c4a0c35cf30739339d4119e36bab85463f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_0a5c22dd55998d2774852d6ff15769c4a0c35cf30739339d4119e36bab85463f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough rewards\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef(memPtr) {\n\n        mstore(add(memPtr, 0), \"only operator\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007f5760003560e01c8063ae169a501161004e578063ae169a5014610111578063b3ab15fb1461012d578063e7f43c6814610156578063f2fde38b1461018157610086565b806312065fe014610088578063715018a6146100b35780638da5cb5b146100ca5780639c9b2e21146100f557610086565b3661008657005b005b34801561009457600080fd5b5061009d6101aa565b6040516100aa9190610891565b60405180910390f35b3480156100bf57600080fd5b506100c86101f4565b005b3480156100d657600080fd5b506100df610208565b6040516100ec91906107f6565b60405180910390f35b61010f600480360381019061010a91906106fa565b610231565b005b61012b60048036038101906101269190610723565b61031d565b005b34801561013957600080fd5b50610154600480360381019061014f91906106fa565b61048c565b005b34801561016257600080fd5b5061016b6104d8565b60405161017891906107f6565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a391906106fa565b610502565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6101fc610586565b6102066000610604565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b890610871565b60405180910390fd5b34600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461031391906108bd565b9250508190555050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410156103a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039990610811565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546103f49190610913565b9250508190555042600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610488573d6000803e3d6000fd5b5050565b610494610586565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61050a610586565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561057a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057190610831565b60405180910390fd5b61058381610604565b50565b61058e6106c8565b73ffffffffffffffffffffffffffffffffffffffff166105ac610208565b73ffffffffffffffffffffffffffffffffffffffff1614610602576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f990610851565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000813590506106df81610a7c565b92915050565b6000813590506106f481610a93565b92915050565b60006020828403121561070c57600080fd5b600061071a848285016106d0565b91505092915050565b60006020828403121561073557600080fd5b6000610743848285016106e5565b91505092915050565b61075581610947565b82525050565b60006107686012836108ac565b9150610773826109b2565b602082019050919050565b600061078b6026836108ac565b9150610796826109db565b604082019050919050565b60006107ae6020836108ac565b91506107b982610a2a565b602082019050919050565b60006107d1600d836108ac565b91506107dc82610a53565b602082019050919050565b6107f081610979565b82525050565b600060208201905061080b600083018461074c565b92915050565b6000602082019050818103600083015261082a8161075b565b9050919050565b6000602082019050818103600083015261084a8161077e565b9050919050565b6000602082019050818103600083015261086a816107a1565b9050919050565b6000602082019050818103600083015261088a816107c4565b9050919050565b60006020820190506108a660008301846107e7565b92915050565b600082825260208201905092915050565b60006108c882610979565b91506108d383610979565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561090857610907610983565b5b828201905092915050565b600061091e82610979565b915061092983610979565b92508282101561093c5761093b610983565b5b828203905092915050565b600061095282610959565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e6f7420656e6f75676820726577617264730000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6f6e6c79206f70657261746f7200000000000000000000000000000000000000600082015250565b610a8581610947565b8114610a9057600080fd5b50565b610a9c81610979565b8114610aa757600080fd5b5056fea26469706673582212209b24b070a50300e68b962abacb4664eeae5deb1a89387c9b163dfd5e56ce29a664736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAE169A50 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xE7F43C68 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x181 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x9C9B2E21 EQ PUSH2 0xF5 JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x891 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x1F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF PUSH2 0x208 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x231 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x723 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1FC PUSH2 0x586 JUMP JUMPDEST PUSH2 0x206 PUSH1 0x0 PUSH2 0x604 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x8BD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x913 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x488 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x494 PUSH2 0x586 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x50A PUSH2 0x586 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x57A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x571 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x583 DUP2 PUSH2 0x604 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x58E PUSH2 0x6C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5AC PUSH2 0x208 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x602 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F9 SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6DF DUP2 PUSH2 0xA7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6F4 DUP2 PUSH2 0xA93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x70C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x71A DUP5 DUP3 DUP6 ADD PUSH2 0x6D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x743 DUP5 DUP3 DUP6 ADD PUSH2 0x6E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x755 DUP2 PUSH2 0x947 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x768 PUSH1 0x12 DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0x773 DUP3 PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78B PUSH1 0x26 DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0x796 DUP3 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AE PUSH1 0x20 DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0x7B9 DUP3 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 PUSH1 0xD DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0x7DC DUP3 PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F0 DUP2 PUSH2 0x979 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x80B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x74C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x82A DUP2 PUSH2 0x75B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x84A DUP2 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x86A DUP2 PUSH2 0x7A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x88A DUP2 PUSH2 0x7C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C8 DUP3 PUSH2 0x979 JUMP JUMPDEST SWAP2 POP PUSH2 0x8D3 DUP4 PUSH2 0x979 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x908 JUMPI PUSH2 0x907 PUSH2 0x983 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91E DUP3 PUSH2 0x979 JUMP JUMPDEST SWAP2 POP PUSH2 0x929 DUP4 PUSH2 0x979 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x93C JUMPI PUSH2 0x93B PUSH2 0x983 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x952 DUP3 PUSH2 0x959 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E6F7420656E6F75676820726577617264730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6F6E6C79206F70657261746F7200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xA85 DUP2 PUSH2 0x947 JUMP JUMPDEST DUP2 EQ PUSH2 0xA90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA9C DUP2 PUSH2 0x979 JUMP JUMPDEST DUP2 EQ PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0x24 0xB0 PUSH17 0xA50300E68B962ABACB4664EEAE5DEB1A89 CODESIZE PUSH29 0x9B163DFD5E56CE29A664736F6C63430008040033000000000000000000 ",
							"sourceMap": "144:1263:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1215:122;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;747:130:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;883:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;554:95;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;655:86;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1215:122:2;1257:15;1291:13;:25;1305:10;1291:25;;;;;;;;;;;;;;;:38;;;1284:45;;1215:122;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;747:130:2:-;427:8;;;;;;;;;;;413:22;;:10;:22;;;404:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;860:9:::1;821:13;:22;835:7;821:22;;;;;;;;;;;;;;;:35;;;:48;;;;;;;:::i;:::-;;;;;;;;747:130:::0;:::o;883:326::-;997:7;955:13;:25;969:10;955:25;;;;;;;;;;;;;;;:38;;;:49;;947:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1080:7;1038:13;:25;1052:10;1038:25;;;;;;;;;;;;;;;:38;;;:49;;;;;;;:::i;:::-;;;;;;;;1136:15;1098:13;:25;1112:10;1098:25;;;;;;;;;;;;;;;:35;;:53;;;;1172:10;1164:28;;:37;1193:7;1164:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;883:326;:::o;554:95::-;1094:13:0;:11;:13::i;:::-;632:9:2::1;621:8;;:20;;;;;;;;;;;;;;;;;;554:95:::0;:::o;655:86::-;698:7;724:8;;;;;;;;;;;717:15;;655:86;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:262::-;624:6;673:2;661:9;652:7;648:23;644:32;641:2;;;689:1;686;679:12;641:2;732:1;757:53;802:7;793:6;782:9;778:22;757:53;:::i;:::-;747:63;;703:117;631:196;;;;:::o;833:118::-;920:24;938:5;920:24;:::i;:::-;915:3;908:37;898:53;;:::o;957:366::-;1099:3;1120:67;1184:2;1179:3;1120:67;:::i;:::-;1113:74;;1196:93;1285:3;1196:93;:::i;:::-;1314:2;1309:3;1305:12;1298:19;;1103:220;;;:::o;1329:366::-;1471:3;1492:67;1556:2;1551:3;1492:67;:::i;:::-;1485:74;;1568:93;1657:3;1568:93;:::i;:::-;1686:2;1681:3;1677:12;1670:19;;1475:220;;;:::o;1701:366::-;1843:3;1864:67;1928:2;1923:3;1864:67;:::i;:::-;1857:74;;1940:93;2029:3;1940:93;:::i;:::-;2058:2;2053:3;2049:12;2042:19;;1847:220;;;:::o;2073:366::-;2215:3;2236:67;2300:2;2295:3;2236:67;:::i;:::-;2229:74;;2312:93;2401:3;2312:93;:::i;:::-;2430:2;2425:3;2421:12;2414:19;;2219:220;;;:::o;2445:118::-;2532:24;2550:5;2532:24;:::i;:::-;2527:3;2520:37;2510:53;;:::o;2569:222::-;2662:4;2700:2;2689:9;2685:18;2677:26;;2713:71;2781:1;2770:9;2766:17;2757:6;2713:71;:::i;:::-;2667:124;;;;:::o;2797:419::-;2963:4;3001:2;2990:9;2986:18;2978:26;;3050:9;3044:4;3040:20;3036:1;3025:9;3021:17;3014:47;3078:131;3204:4;3078:131;:::i;:::-;3070:139;;2968:248;;;:::o;3222:419::-;3388:4;3426:2;3415:9;3411:18;3403:26;;3475:9;3469:4;3465:20;3461:1;3450:9;3446:17;3439:47;3503:131;3629:4;3503:131;:::i;:::-;3495:139;;3393:248;;;:::o;3647:419::-;3813:4;3851:2;3840:9;3836:18;3828:26;;3900:9;3894:4;3890:20;3886:1;3875:9;3871:17;3864:47;3928:131;4054:4;3928:131;:::i;:::-;3920:139;;3818:248;;;:::o;4072:419::-;4238:4;4276:2;4265:9;4261:18;4253:26;;4325:9;4319:4;4315:20;4311:1;4300:9;4296:17;4289:47;4353:131;4479:4;4353:131;:::i;:::-;4345:139;;4243:248;;;:::o;4497:222::-;4590:4;4628:2;4617:9;4613:18;4605:26;;4641:71;4709:1;4698:9;4694:17;4685:6;4641:71;:::i;:::-;4595:124;;;;:::o;4725:169::-;4809:11;4843:6;4838:3;4831:19;4883:4;4878:3;4874:14;4859:29;;4821:73;;;;:::o;4900:305::-;4940:3;4959:20;4977:1;4959:20;:::i;:::-;4954:25;;4993:20;5011:1;4993:20;:::i;:::-;4988:25;;5147:1;5079:66;5075:74;5072:1;5069:81;5066:2;;;5153:18;;:::i;:::-;5066:2;5197:1;5194;5190:9;5183:16;;4944:261;;;;:::o;5211:191::-;5251:4;5271:20;5289:1;5271:20;:::i;:::-;5266:25;;5305:20;5323:1;5305:20;:::i;:::-;5300:25;;5344:1;5341;5338:8;5335:2;;;5349:18;;:::i;:::-;5335:2;5394:1;5391;5387:9;5379:17;;5256:146;;;;:::o;5408:96::-;5445:7;5474:24;5492:5;5474:24;:::i;:::-;5463:35;;5453:51;;;:::o;5510:126::-;5547:7;5587:42;5580:5;5576:54;5565:65;;5555:81;;;:::o;5642:77::-;5679:7;5708:5;5697:16;;5687:32;;;:::o;5725:180::-;5773:77;5770:1;5763:88;5870:4;5867:1;5860:15;5894:4;5891:1;5884:15;5911:168;6051:20;6047:1;6039:6;6035:14;6028:44;6017:62;:::o;6085:225::-;6225:34;6221:1;6213:6;6209:14;6202:58;6294:8;6289:2;6281:6;6277:15;6270:33;6191:119;:::o;6316:182::-;6456:34;6452:1;6444:6;6440:14;6433:58;6422:76;:::o;6504:163::-;6644:15;6640:1;6632:6;6628:14;6621:39;6610:57;:::o;6673:122::-;6746:24;6764:5;6746:24;:::i;:::-;6739:5;6736:35;6726:2;;6785:1;6782;6775:12;6726:2;6716:79;:::o;6801:122::-;6874:24;6892:5;6874:24;:::i;:::-;6867:5;6864:35;6854:2;;6913:1;6910;6903:12;6854:2;6844:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "556800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "174",
								"addReward(address)": "infinite",
								"claimReward(uint256)": "infinite",
								"getBalance()": "1233",
								"getOperator()": "1266",
								"owner()": "1267",
								"renounceOwnership()": "24421",
								"setOperator(address)": "22308",
								"transferOwnership(address)": "24813"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 144,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 144,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 144,
									"end": 1407,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 479,
									"end": 548,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 548,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 479,
									"end": 548,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 479,
									"end": 548,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 479,
									"end": 548,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 479,
									"end": 548,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 479,
									"end": 548,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 479,
									"end": 548,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 479,
									"end": 548,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 531,
									"end": 540,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 520,
									"end": 528,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 520,
									"end": 528,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 520,
									"end": 540,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 520,
									"end": 540,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 520,
									"end": 540,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 520,
									"end": 540,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 520,
									"end": 540,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 520,
									"end": 540,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 520,
									"end": 540,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 520,
									"end": 540,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 520,
									"end": 540,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 520,
									"end": 540,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 520,
									"end": 540,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 520,
									"end": 540,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 520,
									"end": 540,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 520,
									"end": 540,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 520,
									"end": 540,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 520,
									"end": 540,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 520,
									"end": 540,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 520,
									"end": 540,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 479,
									"end": 548,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 144,
									"end": 1407,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 144,
									"end": 1407,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 483,
									"end": 490,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 530,
									"end": 535,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 501,
									"end": 536,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 501,
									"end": 536,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 491,
									"end": 542,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 491,
									"end": 542,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 585,
									"end": 592,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 667,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 618,
									"end": 623,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 614,
									"end": 668,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 603,
									"end": 668,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 603,
									"end": 668,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 593,
									"end": 674,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 593,
									"end": 674,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 771,
									"end": 776,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 746,
									"end": 751,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 743,
									"end": 778,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 733,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 790,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 782,
									"end": 794,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 733,
									"end": 735,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 723,
									"end": 802,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 723,
									"end": 802,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 144,
									"end": 1407,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 144,
									"end": 1407,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 144,
									"end": 1407,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 1407,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 144,
									"end": 1407,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 1407,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 144,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 1407,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209b24b070a50300e68b962abacb4664eeae5deb1a89387c9b163dfd5e56ce29a664736f6c63430008040033",
									".code": [
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "AE169A50"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "AE169A50"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "B3AB15FB"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "E7F43C68"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "12065FE0"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "9C9B2E21"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 144,
											"end": 1407,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 747,
											"end": 877,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 747,
											"end": 877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 747,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 747,
											"end": 877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 877,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 747,
											"end": 877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 747,
											"end": 877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 747,
											"end": 877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 747,
											"end": 877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 747,
											"end": 877,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 747,
											"end": 877,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 747,
											"end": 877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 747,
											"end": 877,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 747,
											"end": 877,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 747,
											"end": 877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 877,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1315,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1329,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1329,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1329,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1329,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 747,
											"end": 877,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 747,
											"end": 877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 427,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 427,
											"end": 435,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 427,
											"end": 435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 427,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 427,
											"end": 435,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 427,
											"end": 435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 427,
											"end": 435,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 427,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 427,
											"end": 435,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 413,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 413,
											"end": 435,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 413,
											"end": 423,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 413,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 413,
											"end": 435,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 413,
											"end": 435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 404,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 404,
											"end": 453,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 404,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 404,
											"end": 453,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 404,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 404,
											"end": 453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 404,
											"end": 453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 404,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 404,
											"end": 453,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 404,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 404,
											"end": 453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 404,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 404,
											"end": 453,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 453,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 404,
											"end": 453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 404,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 404,
											"end": 453,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 404,
											"end": 453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 404,
											"end": 453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 404,
											"end": 453,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 404,
											"end": 453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 404,
											"end": 453,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 404,
											"end": 453,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 404,
											"end": 453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 860,
											"end": 869,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 821,
											"end": 834,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 821,
											"end": 843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 821,
											"end": 843,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 843,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 821,
											"end": 843,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 843,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 821,
											"end": 843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 821,
											"end": 843,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 821,
											"end": 843,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 821,
											"end": 843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 821,
											"end": 843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 821,
											"end": 843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 821,
											"end": 843,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 821,
											"end": 843,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 821,
											"end": 843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 821,
											"end": 843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 843,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 821,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 821,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 821,
											"end": 869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 821,
											"end": 869,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 821,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 821,
											"end": 869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 821,
											"end": 869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 821,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 821,
											"end": 869,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 869,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 821,
											"end": 869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 821,
											"end": 869,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 821,
											"end": 869,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 821,
											"end": 869,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 821,
											"end": 869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 821,
											"end": 869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 821,
											"end": 869,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 821,
											"end": 869,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 747,
											"end": 877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 747,
											"end": 877,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 955,
											"end": 968,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 955,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 969,
											"end": 979,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 955,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 955,
											"end": 980,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 955,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 955,
											"end": 980,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 955,
											"end": 980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 955,
											"end": 980,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 955,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 955,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 955,
											"end": 980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 955,
											"end": 980,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 955,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 955,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 980,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 955,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 993,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 955,
											"end": 993,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 955,
											"end": 1004,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 955,
											"end": 1004,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 947,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1062,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1063,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1151,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1122,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1123,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1133,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1098,
											"end": 1133,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1151,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1182,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1192,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1192,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 1193,
											"end": 1200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 883,
											"end": 1209,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 621,
											"end": 629,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 621,
											"end": 629,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 641,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 621,
											"end": 641,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 621,
											"end": 641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 621,
											"end": 641,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 621,
											"end": 641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 621,
											"end": 641,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 621,
											"end": 641,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 621,
											"end": 641,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 621,
											"end": 641,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 621,
											"end": 641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 621,
											"end": 641,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 621,
											"end": 641,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 621,
											"end": 641,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 621,
											"end": 641,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 621,
											"end": 641,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 621,
											"end": 641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 621,
											"end": 641,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 621,
											"end": 641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 554,
											"end": 649,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 655,
											"end": 741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 698,
											"end": 705,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 732,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 724,
											"end": 732,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 732,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 732,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 732,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 732,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 724,
											"end": 732,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 732,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 732,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 724,
											"end": 732,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 724,
											"end": 732,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 717,
											"end": 732,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 717,
											"end": 732,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 655,
											"end": 741,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 373,
											"end": 375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 411,
											"end": 423,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 373,
											"end": 375,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 464,
											"end": 465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 534,
											"end": 541,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 525,
											"end": 531,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 510,
											"end": 532,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 479,
											"end": 542,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 479,
											"end": 542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 435,
											"end": 552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 363,
											"end": 559,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 565,
											"end": 827,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 565,
											"end": 827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 624,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 670,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 652,
											"end": 659,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 648,
											"end": 671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 644,
											"end": 676,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 641,
											"end": 643,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 641,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 641,
											"end": 643,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 687,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 679,
											"end": 691,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 641,
											"end": 643,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 641,
											"end": 643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 732,
											"end": 733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 802,
											"end": 809,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 793,
											"end": 799,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 778,
											"end": 800,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 757,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 757,
											"end": 810,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 810,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 757,
											"end": 810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 747,
											"end": 810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 747,
											"end": 810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 703,
											"end": 820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 631,
											"end": 827,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 631,
											"end": 827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 631,
											"end": 827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 631,
											"end": 827,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 833,
											"end": 951,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 833,
											"end": 951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 920,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 938,
											"end": 943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 920,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 920,
											"end": 944,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 920,
											"end": 944,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 920,
											"end": 944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 915,
											"end": 918,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 908,
											"end": 945,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 898,
											"end": 951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 951,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 957,
											"end": 1323,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 957,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1184,
											"end": 1186,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1179,
											"end": 1182,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1120,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1120,
											"end": 1187,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1120,
											"end": 1187,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1120,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1113,
											"end": 1187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1113,
											"end": 1187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1196,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1285,
											"end": 1288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1196,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1196,
											"end": 1289,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1289,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1196,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1316,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1298,
											"end": 1317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1298,
											"end": 1317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1323,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1323,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1323,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1323,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1329,
											"end": 1695,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1329,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1471,
											"end": 1474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1556,
											"end": 1558,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1551,
											"end": 1554,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1492,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1492,
											"end": 1559,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1492,
											"end": 1559,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1492,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1568,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1657,
											"end": 1660,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1568,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1568,
											"end": 1661,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1568,
											"end": 1661,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1568,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1688,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1689,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1689,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1695,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1695,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1701,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1701,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1928,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1926,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1864,
											"end": 1931,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1864,
											"end": 1931,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1864,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1931,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2029,
											"end": 2032,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1940,
											"end": 2033,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2033,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1940,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2060,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2056,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2061,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 2067,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2073,
											"end": 2439,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2073,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2218,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2300,
											"end": 2302,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 2295,
											"end": 2298,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2236,
											"end": 2303,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2236,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2236,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2229,
											"end": 2303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2229,
											"end": 2303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2401,
											"end": 2404,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2312,
											"end": 2405,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2312,
											"end": 2405,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2312,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2432,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2425,
											"end": 2428,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2421,
											"end": 2433,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2439,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2532,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2550,
											"end": 2555,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2532,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2532,
											"end": 2556,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2532,
											"end": 2556,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2532,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2530,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2520,
											"end": 2557,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2563,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2569,
											"end": 2791,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2569,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2662,
											"end": 2666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2713,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2781,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2779,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2783,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2757,
											"end": 2763,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2713,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2713,
											"end": 2784,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2713,
											"end": 2784,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2713,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2667,
											"end": 2791,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2667,
											"end": 2791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2667,
											"end": 2791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2667,
											"end": 2791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2667,
											"end": 2791,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2797,
											"end": 3216,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2797,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3003,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2990,
											"end": 2999,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2986,
											"end": 3004,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3004,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3004,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3059,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3060,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3036,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3034,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3038,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3014,
											"end": 3061,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3204,
											"end": 3208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3078,
											"end": 3209,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3078,
											"end": 3209,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3078,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3216,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3222,
											"end": 3641,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3222,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3388,
											"end": 3392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3428,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3415,
											"end": 3424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3429,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3403,
											"end": 3429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3403,
											"end": 3429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3484,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3469,
											"end": 3473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3485,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3461,
											"end": 3462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3486,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3629,
											"end": 3633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3503,
											"end": 3634,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3503,
											"end": 3634,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3503,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3634,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3641,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3641,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3647,
											"end": 4066,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3647,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3849,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3854,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3828,
											"end": 3854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3828,
											"end": 3854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3900,
											"end": 3909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3894,
											"end": 3898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3910,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3886,
											"end": 3887,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3888,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3864,
											"end": 3911,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4054,
											"end": 4058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3928,
											"end": 4059,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3928,
											"end": 4059,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3928,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 4059,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 4059,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 4066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 4066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 4066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 4066,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4072,
											"end": 4491,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4072,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4278,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4261,
											"end": 4279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4325,
											"end": 4334,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4323,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4315,
											"end": 4335,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4300,
											"end": 4309,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4296,
											"end": 4313,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4289,
											"end": 4336,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4353,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4479,
											"end": 4483,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4353,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4353,
											"end": 4484,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4353,
											"end": 4484,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4353,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4484,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4491,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4497,
											"end": 4719,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4497,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4590,
											"end": 4594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4630,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4617,
											"end": 4626,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4631,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4605,
											"end": 4631,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4605,
											"end": 4631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4685,
											"end": 4691,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4641,
											"end": 4712,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4641,
											"end": 4712,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4641,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4719,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4719,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4719,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4725,
											"end": 4894,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4725,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4809,
											"end": 4820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4849,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4838,
											"end": 4841,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4831,
											"end": 4850,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4883,
											"end": 4887,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 4888,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4859,
											"end": 4888,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4859,
											"end": 4888,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4894,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4894,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4894,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4900,
											"end": 5205,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4900,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4940,
											"end": 4943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4959,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4977,
											"end": 4978,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4959,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4959,
											"end": 4979,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4959,
											"end": 4979,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4959,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 4979,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 4979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4993,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4993,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4993,
											"end": 5013,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4993,
											"end": 5013,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4993,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5147,
											"end": 5148,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5079,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5075,
											"end": 5149,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5073,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5069,
											"end": 5150,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5068,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 5066,
											"end": 5068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5068,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 5066,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5197,
											"end": 5198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5194,
											"end": 5195,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5190,
											"end": 5199,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5183,
											"end": 5199,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5183,
											"end": 5199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4944,
											"end": 5205,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4944,
											"end": 5205,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4944,
											"end": 5205,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4944,
											"end": 5205,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4944,
											"end": 5205,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5211,
											"end": 5402,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5211,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5251,
											"end": 5255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5271,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5289,
											"end": 5290,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5271,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5271,
											"end": 5291,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5271,
											"end": 5291,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5271,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5266,
											"end": 5291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5266,
											"end": 5291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5305,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5323,
											"end": 5324,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5305,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5305,
											"end": 5325,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5305,
											"end": 5325,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5305,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5325,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5344,
											"end": 5345,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5342,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5338,
											"end": 5346,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5335,
											"end": 5337,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5335,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5335,
											"end": 5337,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5335,
											"end": 5337,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5335,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5394,
											"end": 5395,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5391,
											"end": 5392,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5387,
											"end": 5396,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5379,
											"end": 5396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5379,
											"end": 5396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5402,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5402,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5402,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5408,
											"end": 5504,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5408,
											"end": 5504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5445,
											"end": 5452,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5492,
											"end": 5497,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5474,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5474,
											"end": 5498,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5474,
											"end": 5498,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5474,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5463,
											"end": 5498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5463,
											"end": 5498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5504,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5504,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5510,
											"end": 5636,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5510,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5554,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5629,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5585,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5576,
											"end": 5630,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5565,
											"end": 5630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5565,
											"end": 5630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5636,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5636,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5642,
											"end": 5719,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5642,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5713,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5697,
											"end": 5713,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5697,
											"end": 5713,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5687,
											"end": 5719,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5687,
											"end": 5719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5687,
											"end": 5719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5687,
											"end": 5719,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5725,
											"end": 5905,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5725,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5773,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5770,
											"end": 5771,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5851,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 5874,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5867,
											"end": 5868,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5860,
											"end": 5875,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5898,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5891,
											"end": 5892,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5884,
											"end": 5899,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5911,
											"end": 6079,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5911,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6071,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F7420656E6F75676820726577617264730000000000000000000000000000"
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6039,
											"end": 6045,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6049,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6028,
											"end": 6072,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6017,
											"end": 6079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6017,
											"end": 6079,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6085,
											"end": 6310,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6085,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6221,
											"end": 6222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6219,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6209,
											"end": 6223,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6202,
											"end": 6260,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6302,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6289,
											"end": 6291,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6281,
											"end": 6287,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6292,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6270,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6191,
											"end": 6310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6191,
											"end": 6310,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6316,
											"end": 6498,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 6316,
											"end": 6498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6456,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6452,
											"end": 6453,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6450,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6440,
											"end": 6454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6433,
											"end": 6491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6498,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6504,
											"end": 6667,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 6504,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6644,
											"end": 6659,
											"name": "PUSH",
											"source": 3,
											"value": "6F6E6C79206F70657261746F7200000000000000000000000000000000000000"
										},
										{
											"begin": 6640,
											"end": 6641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6638,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6621,
											"end": 6660,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6610,
											"end": 6667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6610,
											"end": 6667,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6746,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6764,
											"end": 6769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6746,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6746,
											"end": 6770,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6746,
											"end": 6770,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6746,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6736,
											"end": 6771,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6726,
											"end": 6728,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6783,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6775,
											"end": 6787,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 6728,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6726,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6716,
											"end": 6795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6716,
											"end": 6795,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6801,
											"end": 6923,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6801,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6892,
											"end": 6897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6867,
											"end": 6872,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6864,
											"end": 6899,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6854,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6854,
											"end": 6856,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6914,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6911,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6903,
											"end": 6915,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6854,
											"end": 6856,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6854,
											"end": 6856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6923,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6923,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addReward(address)": "9c9b2e21",
							"claimReward(uint256)": "ae169a50",
							"getBalance()": "12065fe0",
							"getOperator()": "e7f43c68",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setOperator(address)": "b3ab15fb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_client\",\"type\":\"address\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Reward.sol\":\"Reward\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Reward.sol\":{\"keccak256\":\"0xaace08ee4b17466561481da5ec4e496b086ee8e5a458b0eec0e49c6e9ed849f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9562524c20c73bd613f9e86b29c29a51132ed80ee407dfe9c46deb69e936a8da\",\"dweb:/ipfs/QmSfavnw9Ep9KvWK5xeQgcXSdRw8KWrEg4CEqdgC1UUXKC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Reward.sol:Reward",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 149,
								"contract": "Reward.sol:Reward",
								"label": "RewardDetails",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(RewardDetail)144_storage)"
							},
							{
								"astId": 151,
								"contract": "Reward.sol:Reward",
								"label": "operator",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(RewardDetail)144_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Reward.RewardDetail)",
								"numberOfBytes": "32",
								"value": "t_struct(RewardDetail)144_storage"
							},
							"t_struct(RewardDetail)144_storage": {
								"encoding": "inplace",
								"label": "struct Reward.RewardDetail",
								"members": [
									{
										"astId": 141,
										"contract": "Reward.sol:Reward",
										"label": "rewardAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 143,
										"contract": "Reward.sol:Reward",
										"label": "lastClaim",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"Reward.sol": {
				"ast": {
					"absolutePath": "Reward.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						],
						"Reward": [
							273
						]
					},
					"id": 274,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 274,
							"sourceUnit": 113,
							"src": "88:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "163:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "163:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 273,
							"linearizedBaseContracts": [
								273,
								112,
								134
							],
							"name": "Reward",
							"nameLocation": "153:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Reward.RewardDetail",
									"id": 144,
									"members": [
										{
											"constant": false,
											"id": 141,
											"mutability": "mutable",
											"name": "rewardAmount",
											"nameLocation": "222:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "214:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 140,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "214:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 143,
											"mutability": "mutable",
											"name": "lastClaim",
											"nameLocation": "253:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "245:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 142,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "245:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RewardDetail",
									"nameLocation": "191:12:2",
									"nodeType": "StructDefinition",
									"scope": 273,
									"src": "184:86:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 149,
									"mutability": "mutable",
									"name": "RewardDetails",
									"nameLocation": "318:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 273,
									"src": "276:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RewardDetail_$144_storage_$",
										"typeString": "mapping(address => struct Reward.RewardDetail)"
									},
									"typeName": {
										"id": 148,
										"keyType": {
											"id": 145,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "285:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "276:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RewardDetail_$144_storage_$",
											"typeString": "mapping(address => struct Reward.RewardDetail)"
										},
										"valueType": {
											"id": 147,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 146,
												"name": "RewardDetail",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 144,
												"src": "296:12:2"
											},
											"referencedDeclaration": 144,
											"src": "296:12:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RewardDetail_$144_storage_ptr",
												"typeString": "struct Reward.RewardDetail"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 151,
									"mutability": "mutable",
									"name": "operator",
									"nameLocation": "354:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 273,
									"src": "338:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 150,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "338:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "393:80:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 154,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "413:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "413:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 156,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "427:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "413:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c79206f70657261746f72",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "437:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
																"typeString": "literal_string \"only operator\""
															},
															"value": "only operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
																"typeString": "literal_string \"only operator\""
															}
														],
														"id": 153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "404:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "404:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "404:49:2"
											},
											{
												"id": 161,
												"nodeType": "PlaceholderStatement",
												"src": "464:1:2"
											}
										]
									},
									"id": 163,
									"name": "onlyOperator",
									"nameLocation": "381:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "393:0:2"
									},
									"src": "372:101:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "509:39:2",
										"statements": [
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 168,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "520:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 169,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "531:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "520:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "520:20:2"
											}
										]
									},
									"id": 173,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "499:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "491:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "491:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "490:19:2"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "509:0:2"
									},
									"scope": 273,
									"src": "479:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "610:39:2",
										"statements": [
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "621:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 181,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "632:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "621:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "621:20:2"
											}
										]
									},
									"functionSelector": "b3ab15fb",
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 177,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "601:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "601:9:2"
										}
									],
									"name": "setOperator",
									"nameLocation": "563:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "583:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "575:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:19:2"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:0:2"
									},
									"scope": 273,
									"src": "554:95:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "706:35:2",
										"statements": [
											{
												"expression": {
													"id": 190,
													"name": "operator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 151,
													"src": "724:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 189,
												"id": 191,
												"nodeType": "Return",
												"src": "717:15:2"
											}
										]
									},
									"functionSelector": "e7f43c68",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOperator",
									"nameLocation": "664:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "698:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:9:2"
									},
									"scope": 273,
									"src": "655:86:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "810:67:2",
										"statements": [
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 200,
																"name": "RewardDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "821:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RewardDetail_$144_storage_$",
																	"typeString": "mapping(address => struct Reward.RewardDetail storage ref)"
																}
															},
															"id": 202,
															"indexExpression": {
																"id": 201,
																"name": "_client",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "835:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "821:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RewardDetail_$144_storage",
																"typeString": "struct Reward.RewardDetail storage ref"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 141,
														"src": "821:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 204,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "860:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "860:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "821:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "821:48:2"
											}
										]
									},
									"functionSelector": "9c9b2e21",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 198,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 197,
												"name": "onlyOperator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 163,
												"src": "798:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "798:12:2"
										}
									],
									"name": "addReward",
									"nameLocation": "756:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "_client",
												"nameLocation": "774:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "766:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:17:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "810:0:2"
									},
									"scope": 273,
									"src": "747:130:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "936:273:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 215,
																		"name": "RewardDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "955:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RewardDetail_$144_storage_$",
																			"typeString": "mapping(address => struct Reward.RewardDetail storage ref)"
																		}
																	},
																	"id": 218,
																	"indexExpression": {
																		"expression": {
																			"id": 216,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "969:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "969:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "955:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardDetail_$144_storage",
																		"typeString": "struct Reward.RewardDetail storage ref"
																	}
																},
																"id": 219,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "rewardAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 141,
																"src": "955:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 220,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "997:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "955:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682072657761726473",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1006:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a5c22dd55998d2774852d6ff15769c4a0c35cf30739339d4119e36bab85463f",
																"typeString": "literal_string \"Not enough rewards\""
															},
															"value": "Not enough rewards"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a5c22dd55998d2774852d6ff15769c4a0c35cf30739339d4119e36bab85463f",
																"typeString": "literal_string \"Not enough rewards\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "947:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "947:80:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "947:80:2"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 225,
																"name": "RewardDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "1038:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RewardDetail_$144_storage_$",
																	"typeString": "mapping(address => struct Reward.RewardDetail storage ref)"
																}
															},
															"id": 228,
															"indexExpression": {
																"expression": {
																	"id": 226,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1052:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1052:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1038:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RewardDetail_$144_storage",
																"typeString": "struct Reward.RewardDetail storage ref"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 141,
														"src": "1038:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 230,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1080:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1038:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "1038:49:2"
											},
											{
												"expression": {
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 233,
																"name": "RewardDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "1098:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RewardDetail_$144_storage_$",
																	"typeString": "mapping(address => struct Reward.RewardDetail storage ref)"
																}
															},
															"id": 236,
															"indexExpression": {
																"expression": {
																	"id": 234,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1112:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1112:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1098:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RewardDetail_$144_storage",
																"typeString": "struct Reward.RewardDetail storage ref"
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastClaim",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 143,
														"src": "1098:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 238,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1136:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1136:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1098:53:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "1098:53:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 248,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "1193:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 244,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1172:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1172:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1164:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 242,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1164:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1164:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1164:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1164:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "1164:37:2"
											}
										]
									},
									"functionSelector": "ae169a50",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "892:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "912:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "904:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "904:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:17:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "936:0:2"
									},
									"scope": 273,
									"src": "883:326:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "1273:64:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 257,
															"name": "RewardDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "1291:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RewardDetail_$144_storage_$",
																"typeString": "mapping(address => struct Reward.RewardDetail storage ref)"
															}
														},
														"id": 260,
														"indexExpression": {
															"expression": {
																"id": 258,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1305:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1305:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1291:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RewardDetail_$144_storage",
															"typeString": "struct Reward.RewardDetail storage ref"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "rewardAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 141,
													"src": "1291:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 256,
												"id": 262,
												"nodeType": "Return",
												"src": "1284:45:2"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "1224:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1234:2:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1265:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1257:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1257:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:17:2"
									},
									"scope": 273,
									"src": "1215:122:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "1368:2:2",
										"statements": []
									},
									"id": 268,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1350:2:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1368:0:2"
									},
									"scope": 273,
									"src": "1343:27:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "1402:2:2",
										"statements": []
									},
									"id": 272,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1384:2:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1402:0:2"
									},
									"scope": 273,
									"src": "1376:28:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 274,
							"src": "144:1263:2",
							"usedErrors": []
						}
					],
					"src": "33:1376:2"
				},
				"id": 2
			}
		}
	}
}